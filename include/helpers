#!/usr/bin/env bash

# Copyright (c) 2012 Dickson S. Guedes.
#
# This module is free software; you can redistribute it and/or modify it under
# the [PostgreSQL License](http://www.opensource.org/licenses/postgresql).
#
# Permission to use, copy, modify, and distribute this software and its
# documentation for any purpose, without fee, and without a written agreement is
# hereby granted, provided that the above copyright notice and this paragraph
# and the following two paragraphs appear in all copies.
#
# In no event shall Dickson S. Guedes be liable to any party for direct,
# indirect, special, incidental, or consequential damages, including lost
# profits, arising out of the use of this software and its documentation, even
# if Dickson S. Guedes has been advised of the possibility of such damage.
#
# Dickson S. Guedes specifically disclaims any warranties, including, but not
# limited to, the implied warranties of merchantability and fitness for a
# particular purpose. The software provided hereunder is on an "as is" basis,
# and Dickson S. Guedes has no obligations to provide maintenance, support,
# updates, enhancements, or modifications.

action_exists()
{
	[[ -f "${pgvm_home}/actions/$1" ]]
}

execute_action()
{
	action=$1

	if action_exists $action
	then
		source $pgvm_home/actions/$action
		shift

		$action $@
	else
		execute_action help
	fi
}

get_postgres()
{
	version=${1:-$version}
	pg_dest_dir=$pgvm_home/src
	pg_url=$(postgres_download_url $version)

	mkdir -p $pg_dest_dir

	cd $pg_dest_dir
	echo -n "downloading '$pg_url', please be patient... "
	curl $pg_url -z postgresql-$version.tar.gz     -o postgresql-$version.tar.gz --silent --location -C - 2>/dev/null
	echo "done."
	curl $pg_url.md5 -z postgresql-$version.tar.gz.md5 -o postgresql-$version.tar.gz.md5 --silent --location -C - 2>/dev/null

	echo -n "checking 'postgresql-$version.tar.gz' integrity... "
	md5sum -c postgresql-$version.tar.gz.md5 >/dev/null 2>/dev/null

	[[ $? -ne 0 ]] && echo "ERRO: CHECKSUM of 'postgresql-$version.tar.gz' has failed! Aborting!" && exit 1

	echo "done."
}

extract_postgres()
{
	version=${1:-$version}
	pg_dest_dir=$pgvm_home/src

	cd $pg_dest_dir

	echo -n "extracting postgresql-$version.tar.gz ... "
	tar zxvf postgresql-$version.tar.gz >/dev/null
	[[ $? -ne 0 ]] && echo "ERRO: can not extract file 'postgresql-$version.tar.gz'" && exit 1
	echo "done."
}

compile_and_install_postgres()
{
	version=${1:-$version}
	configure_options=${CONFIG_OPTS}
	make_options=${MAKE_OPTS}

	pg_dest_dir=$pgvm_home/src/postgresql-$version

	cd $pg_dest_dir
	mkdir -p $pgvm_home/environments/$version

	echo -n "configuring PostgreSQL Version: $version ... "
	./configure --prefix=$pgvm_home/environments/$version ${configure_options} --silent
	echo "done."

	echo -n "compiling ... "
	make ${make_options} 1>make.log 2>make.error.log
	[[ $? -ne 0 ]] && echo "ERRO: can not compile PostgreSQL $version, see make.error.log for details." && exit 1
	echo "done."

	echo -n "installing ... "
	make install 1>make_install.log 2>make_install.error.log
	[[ $? -ne 0 ]] && echo "ERRO: can not install PostgreSQL $version" && exit 1
	echo "done."
}

version_is_installed()
{
	version=${1:-$version}

	[[ -d "${pgvm_home}/environments/$version" ]]
}

create_symlinks()
{
	check_env

	version=${1:-$version}
	mkdir --parents $pgvm_home/environments
	ln --no-dereference --force --symbolic $pgvm_home/environments/$version $pgvm_home/environments/current
	builtin hash -r
}

check_env()
{
	[[ -z $pgvm_home ]] && echo "\$pgvm_home is not set!" && exit 1
}

